{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.interceptor.ts","webpack:///src/app/login/login-reqest.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/register-request.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/tasks/task.service.ts","webpack:///src/app/tasks/task.ts","webpack:///src/app/tasks/tasks.component.ts","webpack:///src/app/tasks/tasks.component.html","webpack:///src/app/tasks/user.ts","webpack:///src/app/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","provide","useClass","multi","forRoot","declarations","imports","providers","bootstrap","AuthInterceptor","cookieService","router","request","next","url","newReqest","clone","headers","set","get","console","log","handle","pipe","err","body","message","alert","navigateByUrl","LoginReqest","username","password","value","LoginComponent","userService","login","loginRequest","subscribe","token","error","submit","RegisterRequest","RegisterComponent","registerRequest","register","TaskService","httpClient","task","post","providedIn","Task","TasksComponent","taskService","role","newTask","studentLogin","users","tasks","getTasks","teacherLogin","addTask","getUserByLogin","conf","confirm","deleteTask","getTask","changeTask","User","UserService","loginReqest","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Praktika';\n}\n","<p>\r\n  <mat-toolbar>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button routerLink=\"/login\" mat-menu-item>Войти</button>\r\n      <button routerLink=\"/register\" mat-menu-item>Зарегистрироваться</button>\r\n      <button routerLink=\"\" mat-menu-item>Задания</button>\r\n    </mat-menu>\r\n    <span>Ваше рабочее пространство</span>\r\n  </mat-toolbar>\r\n</p>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CookieService} from 'ngx-cookie-service';\nimport {AuthInterceptor} from './auth.interceptor';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSelectModule} from '@angular/material/select';\n\nconst appRoutes: Routes = [\n  {path: '', component: TasksComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes),\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatSelectModule\n  ],\n  providers: [CookieService,\n    {provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true}\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpErrorResponse, HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {CookieService} from 'ngx-cookie-service';\nimport {tap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private cookieService: CookieService, private router: Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (request.url !== 'https://afternoon-oasis-35400.herokuapp.com/authenticate') {\n      if (request.url !== 'https://afternoon-oasis-35400.herokuapp.com/register') {\n        const newReqest = request.clone({headers: request.headers.set('Authorization', this.cookieService.get('token'))});\n        console.log(newReqest);\n        return next.handle(newReqest).pipe(tap(\n          (err) => {\n            if (err instanceof HttpResponse) {\n              if (err.body.message === 'Unauthorized') {\n                console.log('Unauthorized');\n                alert('Вы не авторизованы!');\n                this.router.navigateByUrl('/login');\n              }\n            }\n          },\n          (err) => {\n            if (err instanceof HttpErrorResponse) {\n              console.log('Unauthorized');\n              alert('Вы не авторизованы!');\n              this.router.navigateByUrl('/login');\n            }\n          }));\n      }\n    }\n    return next.handle(request);\n  }\n}\n","export class LoginReqest {\n  private username: string;\n  private password: string;\n\n  constructor(username: string, password: string) {\n    this.username = username;\n    this.password = password;\n  }\n\n\n  getusername(): string {\n    return this.username;\n  }\n\n  setusername(value: string) {\n    this.username = value;\n  }\n\n  getpassword(): string {\n    return this.password;\n  }\n\n  setpassword(value: string) {\n    this.password = value;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {LoginResponse} from './login-response';\nimport {LoginReqest} from './login-reqest';\nimport {UserService} from '../user.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserService, private cookieService: CookieService,\n              private router: Router) {}\n  login = '';\n  password = '';\n  loginRequest: LoginReqest;\n  ngOnInit(): void {\n  }\n  submit(): void {\n    this.loginRequest = new LoginReqest(this.login, this.password);\n    this.userService.login(this.loginRequest).subscribe((value: LoginResponse) => {\n      console.log(value);\n      this.cookieService.set('token', 'Bearer ' + value.token);\n      this.cookieService.set('username', this.login);\n      alert('Вы успешно вошли в систему');\n      this.router.navigateByUrl('/');\n    },\n      error => {\n      console.log(error);\n      alert('Неверный логин или пароль');\n      });\n  }\n\n}\n","<form class=\"form\">\n  <p class=\"mat-card-title\">Вход:</p>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Логин</mat-label>\n    <input matInput name=\"login\" id=\"login\" [(ngModel)]=\"login\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Пароль</mat-label>\n    <input matInput name=\"password\" id=\"password\" [(ngModel)]=\"password\">\n  </mat-form-field>\n  <button (click)=\"submit()\" mat-stroked-button>Войти</button>\n</form>\n","export class RegisterRequest {\n  login: string;\n  password: string;\n  role: string;\n  firstName: string;\n  surname: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {RegisterRequest} from './register-request';\nimport {UserService} from '../user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router) {\n    this.registerRequest = new RegisterRequest();\n  }\n  registerRequest: RegisterRequest;\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    this.userService.register(this.registerRequest).subscribe(\n      value => {\n        alert('Вы успешно зарегистрированлсь, войдите в систему');\n        this.router.navigateByUrl('/login');\n      },\n      error => {\n        alert('Ошибка при регистрации! Возможно, введённый вами логин уже используется!');\n      }\n    );\n  }\n}\n","<form class=\"form\">\n  <p class=\"mat-card-title\">Регистрация:</p>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Логин</mat-label>\n    <input matInput name=\"login\" id=\"login\" [(ngModel)]=\"registerRequest.login\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Пароль</mat-label>\n    <input matInput name=\"password\" id=\"password\" [(ngModel)]=\"registerRequest.password\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Выберите роль</mat-label>\n    <mat-select name=\"role\" [(ngModel)]=\"registerRequest.role\">\n      <mat-option value=\"ROLE_STUDENT\">Ученик</mat-option>\n      <mat-option value=\"ROLE_TEACHER\">Учитель</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Имя</mat-label>\n    <input matInput name=\"firstName\" id=\"firstName\" [(ngModel)]=\"registerRequest.firstName\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Фамилия</mat-label>\n    <input matInput name=\"surname\" id=\"surname\" [(ngModel)]=\"registerRequest.surname\">\n  </mat-form-field>\n  <button (click)=\"submit()\" mat-stroked-button>Зарегестрироваться</button>\n</form>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Task} from './task';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private httpClient: HttpClient) { }\n  url = 'https://afternoon-oasis-35400.herokuapp.com/';\n  public addTask(task: Task): Observable<any> {\n    return this.httpClient.post(this.url + 'task/addTask', task);\n  }\n  public deleteTask(task: Task): Observable<any> {\n    return this.httpClient.post(this.url + 'task/delete', task);\n  }\n  public getTask(): Observable<any> {\n    return this.httpClient.get(this.url + 'task');\n  }\n  public changeTask(task: Task): Observable<any> {\n    return this.httpClient.post(this.url + 'task/change', task)\n  }\n  public getUserByLogin(login: string): Observable<any> {\n    return this.httpClient.get(this.url + 'userApp/' + login);\n  }\n}\n","import {User} from './user';\n\nexport class Task {\n  id: number;\n  studentLogin: User;\n  teacherLogin: User;\n  textOfTask: string;\n  taken: boolean;\n  answerOnTask: string;\n  feedback: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../user.service';\nimport {Task} from './task';\nimport {User} from './user';\nimport {TaskService} from './task.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {timeSinceInMicros} from '@angular/compiler-cli/src/ngtsc/perf/src/clock';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  role: string;\n  newTask: Task;\n  users: User[];\n  tasks: Task[];\n\n  constructor(private userService: UserService, private taskService: TaskService,\n              private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n    this.userService.role().subscribe(value => {\n      console.log(value);\n      this.role = value.role;\n    },\n      error => {\n      console.log(error);\n      });\n    this.newTask = new Task();\n    this.newTask.studentLogin = new User();\n    this.users = new User()[50];\n    this.tasks = [];\n    this.getTasks();\n  }\n\n  submit() {\n    this.newTask.teacherLogin = new User();\n    this.taskService.addTask(this.newTask).subscribe((task: Task) => {\n      console.log(task);\n      this.getTasks();\n      },\n      error => {\n      console.log(error);\n      });\n  }\n  insertLogin(login: string) {\n    this.newTask.studentLogin.login = login;\n    this.users = [];\n  }\n\n  findLogin() {\n    this.taskService.getUserByLogin(this.newTask.studentLogin.login).subscribe(\n      (users: User[]) => {\n        this.users = users;\n        console.log(users);\n      },\n      error => {}\n    );\n  }\n\n  deleteTask(task: Task) {\n    const conf = confirm('Удалить задние №' + task.id);\n    if (conf) {\n      this.taskService.deleteTask(task).subscribe(\n        value => {\n          this.getTasks();\n        },\n        error => {\n        }\n      );\n    }\n  }\n\n  getTasks() {\n    this.taskService.getTask().subscribe(\n      (tasks: Task[]) => {\n        this.tasks = tasks;\n      },\n      error => {}\n    );\n  }\n\n  change(task: Task) {\n    this.taskService.changeTask(task).subscribe(\n      value => {\n        this.getTasks();\n      },\n      error => {}\n    );\n  }\n}\n","<div *ngIf=\"role === 'ROLE_TEACHER'\">\n  <form class=\"form\">\n    <p class=\"mat-card-title\">Создать задание:</p>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Логин ученика</mat-label>\n      <input matInput name=\"login\" id=\"login\" [(ngModel)]=\"newTask.studentLogin.login\" (change)=\"findLogin()\">\n    </mat-form-field>\n    <mat-list>\n      <mat-list-item (click)=\"insertLogin(user.login)\" *ngFor=\"let user of users\">{{user.login}}</mat-list-item>\n    </mat-list>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Текст задания</mat-label>\n      <textarea matInput name=\"text\" id=\"text\" [(ngModel)]=\"newTask.textOfTask\"></textarea>\n    </mat-form-field>\n    <button (click)=\"submit()\" mat-stroked-button>Создать</button>\n  </form>\n  <mat-accordion>\n    <mat-expansion-panel hideToggle *ngFor=\"let task of tasks\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Номер задания {{task.id}}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{task.textOfTask}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>Текст задания: {{task.textOfTask}}</p>\n      <p>Кем выдано: {{task.teacherLogin.login}}</p>\n      <p>Кому выдано: {{task.studentLogin.login}}</p>\n      <p>Приято: {{task.taken}}</p>\n      <p>Ответ: {{task.answerOnTask}}</p>\n      <p>Отзыв: {{task.feedback}}</p>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Отзыв:</mat-label>\n        <textarea matInput [name]=\"task.id + 'd'\" [(ngModel)]=\"task.feedback\"></textarea>\n      </mat-form-field>\n      <button (click)=\"change(task)\" mat-stroked-button>Изменить отзыв</button>\n      <p><button (click)=\"deleteTask(task)\" mat-stroked-button color=\"warn\">Удалить задание</button></p>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n<div *ngIf=\"role === 'ROLE_STUDENT'\">\n  <mat-accordion>\n    <mat-expansion-panel hideToggle *ngFor=\"let task of tasks\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Номер задания {{task.id}}\n          <p *ngIf=\"!task.taken\"> (Задание не начато!)</p>\n        </mat-panel-title>\n        <mat-panel-description>\n          {{task.textOfTask}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>Текст задания: {{task.textOfTask}}</p>\n      <p>Кем выдано: {{task.teacherLogin.login}}</p>\n      <p>Кому выдано: {{task.studentLogin.login}}</p>\n      <p>Приято: {{task.taken}}</p>\n      <p>Ответ: {{task.answerOnTask}}</p>\n      <p>Отзыв: {{task.feedback}}</p>\n      <mat-slide-toggle [(ngModel)]=\"task.taken\">Принять</mat-slide-toggle>\n      <mat-form-field *ngIf=\"task.taken\" appearance=\"fill\">\n        <mat-label>Ответ:</mat-label>\n        <textarea matInput [name]=\"task.id + 'd'\" [(ngModel)]=\"task.answerOnTask\"></textarea>\n      </mat-form-field>\n      <button (click)=\"change(task)\" mat-stroked-button>Отправить</button>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n","export class User {\n  login: string;\n  password: string;\n  role: string;\n  firstName: string;\n  surname: string;\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {LoginReqest} from './login/login-reqest';\nimport {Observable} from 'rxjs';\nimport {RegisterRequest} from './register/register-request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private httpClient: HttpClient) { }\n  url = 'https://afternoon-oasis-35400.herokuapp.com/';\n  public login(loginReqest: LoginReqest): Observable<any>{\n    return this.httpClient.post(this.url + 'authenticate', loginReqest);\n  }\n  public role(): Observable<any>{\n    return this.httpClient.get(this.url + 'role');\n  }\n  public register(registerRequest: RegisterRequest): Observable<any>{\n    return this.httpClient.post(this.url + 'register', registerRequest);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}