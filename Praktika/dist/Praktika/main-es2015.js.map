{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.interceptor.ts","./src/app/login/login-reqest.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/register/register-request.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/tasks/task.service.ts","./src/app/tasks/task.ts","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.component.html","./src/app/tasks/user.ts","./src/app/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Praktika';\n}\n","<p>\r\n  <mat-toolbar>\r\n    <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <mat-menu #menu=\"matMenu\">\r\n      <button routerLink=\"/login\" mat-menu-item>Войти</button>\r\n      <button routerLink=\"/register\" mat-menu-item>Зарегистрироваться</button>\r\n      <button routerLink=\"\" mat-menu-item>Задания</button>\r\n    </mat-menu>\r\n    <span>Ваше рабочее пространство</span>\r\n  </mat-toolbar>\r\n</p>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { TasksComponent } from './tasks/tasks.component';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CookieService} from 'ngx-cookie-service';\nimport {AuthInterceptor} from './auth.interceptor';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatListModule} from '@angular/material/list';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSelectModule} from '@angular/material/select';\n\nconst appRoutes: Routes = [\n  {path: '', component: TasksComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule.forRoot(appRoutes),\n    MatToolbarModule,\n    MatIconModule,\n    MatMenuModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatSelectModule\n  ],\n  providers: [CookieService,\n    {provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true}\n    ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpErrorResponse, HttpResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {CookieService} from 'ngx-cookie-service';\nimport {tap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private cookieService: CookieService, private router: Router) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (request.url !== 'https://afternoon-oasis-35400.herokuapp.com/authenticate') {\n      if (request.url !== 'https://afternoon-oasis-35400.herokuapp.com/register') {\n        const newReqest = request.clone({headers: request.headers.set('Authorization', this.cookieService.get('token'))});\n        console.log(newReqest);\n        return next.handle(newReqest).pipe(tap(\n          (err) => {\n            if (err instanceof HttpResponse) {\n              if (err.body.message === 'Unauthorized') {\n                console.log('Unauthorized');\n                alert('Вы не авторизованы!');\n                this.router.navigateByUrl('/login');\n              }\n            }\n          },\n          (err) => {\n            if (err instanceof HttpErrorResponse) {\n              console.log('Unauthorized');\n              alert('Вы не авторизованы!');\n              this.router.navigateByUrl('/login');\n            }\n          }));\n      }\n    }\n    return next.handle(request);\n  }\n}\n","export class LoginReqest {\n  private username: string;\n  private password: string;\n\n  constructor(username: string, password: string) {\n    this.username = username;\n    this.password = password;\n  }\n\n\n  getusername(): string {\n    return this.username;\n  }\n\n  setusername(value: string) {\n    this.username = value;\n  }\n\n  getpassword(): string {\n    return this.password;\n  }\n\n  setpassword(value: string) {\n    this.password = value;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {LoginResponse} from './login-response';\nimport {LoginReqest} from './login-reqest';\nimport {UserService} from '../user.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']})\nexport class LoginComponent implements OnInit {\n\n  constructor(private userService: UserService, private cookieService: CookieService,\n              private router: Router) {}\n  login = '';\n  password = '';\n  loginRequest: LoginReqest;\n  ngOnInit(): void {\n  }\n  submit(): void {\n    this.loginRequest = new LoginReqest(this.login, this.password);\n    this.userService.login(this.loginRequest).subscribe((value: LoginResponse) => {\n      console.log(value);\n      this.cookieService.set('token', 'Bearer ' + value.token);\n      this.cookieService.set('username', this.login);\n      alert('Вы успешно вошли в систему');\n      this.router.navigateByUrl('/');\n    },\n      error => {\n      console.log(error);\n      alert('Неверный логин или пароль');\n      });\n  }\n\n}\n","<form class=\"form\">\n  <p class=\"mat-card-title\">Вход:</p>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Логин</mat-label>\n    <input matInput name=\"login\" id=\"login\" [(ngModel)]=\"login\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Пароль</mat-label>\n    <input matInput name=\"password\" id=\"password\" [(ngModel)]=\"password\">\n  </mat-form-field>\n  <button (click)=\"submit()\" mat-stroked-button>Войти</button>\n</form>\n","export class RegisterRequest {\n  login: string;\n  password: string;\n  role: string;\n  firstName: string;\n  surname: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {RegisterRequest} from './register-request';\nimport {UserService} from '../user.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private userService: UserService, private router: Router) {\n    this.registerRequest = new RegisterRequest();\n  }\n  registerRequest: RegisterRequest;\n\n  ngOnInit(): void {\n  }\n\n  submit() {\n    this.userService.register(this.registerRequest).subscribe(\n      value => {\n        alert('Вы успешно зарегистрированлсь, войдите в систему');\n        this.router.navigateByUrl('/login');\n      },\n      error => {\n        alert('Ошибка при регистрации! Возможно, введённый вами логин уже используется!');\n      }\n    );\n  }\n}\n","<form class=\"form\">\n  <p class=\"mat-card-title\">Регистрация:</p>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Логин</mat-label>\n    <input matInput name=\"login\" id=\"login\" [(ngModel)]=\"registerRequest.login\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Пароль</mat-label>\n    <input matInput name=\"password\" id=\"password\" [(ngModel)]=\"registerRequest.password\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Выберите роль</mat-label>\n    <mat-select name=\"role\" [(ngModel)]=\"registerRequest.role\">\n      <mat-option value=\"ROLE_STUDENT\">Ученик</mat-option>\n      <mat-option value=\"ROLE_TEACHER\">Учитель</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Имя</mat-label>\n    <input matInput name=\"firstName\" id=\"firstName\" [(ngModel)]=\"registerRequest.firstName\">\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Фамилия</mat-label>\n    <input matInput name=\"surname\" id=\"surname\" [(ngModel)]=\"registerRequest.surname\">\n  </mat-form-field>\n  <button (click)=\"submit()\" mat-stroked-button>Зарегестрироваться</button>\n</form>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Task} from './task';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n\n  constructor(private httpClient: HttpClient) { }\n  url = 'https://afternoon-oasis-35400.herokuapp.com/';\n  public addTask(task: Task): Observable<any> {\n    return this.httpClient.post(this.url + 'task/addTask', task);\n  }\n  public deleteTask(task: Task): Observable<any> {\n    return this.httpClient.post(this.url + 'task/delete', task);\n  }\n  public getTask(): Observable<any> {\n    return this.httpClient.get(this.url + 'task');\n  }\n  public changeTask(task: Task): Observable<any> {\n    return this.httpClient.post(this.url + 'task/change', task)\n  }\n  public getUserByLogin(login: string): Observable<any> {\n    return this.httpClient.get(this.url + 'userApp/' + login);\n  }\n}\n","import {User} from './user';\n\nexport class Task {\n  id: number;\n  studentLogin: User;\n  teacherLogin: User;\n  textOfTask: string;\n  taken: boolean;\n  answerOnTask: string;\n  feedback: string;\n}\n","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../user.service';\nimport {Task} from './task';\nimport {User} from './user';\nimport {TaskService} from './task.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {timeSinceInMicros} from '@angular/compiler-cli/src/ngtsc/perf/src/clock';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  role: string;\n  newTask: Task;\n  users: User[];\n  tasks: Task[];\n\n  constructor(private userService: UserService, private taskService: TaskService,\n              private cookieService: CookieService) { }\n\n  ngOnInit(): void {\n    this.userService.role().subscribe(value => {\n      console.log(value);\n      this.role = value.role;\n    },\n      error => {\n      console.log(error);\n      });\n    this.newTask = new Task();\n    this.newTask.studentLogin = new User();\n    this.users = new User()[50];\n    this.tasks = [];\n    this.getTasks();\n  }\n\n  submit() {\n    this.newTask.teacherLogin = new User();\n    this.taskService.addTask(this.newTask).subscribe((task: Task) => {\n      console.log(task);\n      this.getTasks();\n      },\n      error => {\n      console.log(error);\n      });\n  }\n  insertLogin(login: string) {\n    this.newTask.studentLogin.login = login;\n    this.users = [];\n  }\n\n  findLogin() {\n    this.taskService.getUserByLogin(this.newTask.studentLogin.login).subscribe(\n      (users: User[]) => {\n        this.users = users;\n        console.log(users);\n      },\n      error => {}\n    );\n  }\n\n  deleteTask(task: Task) {\n    const conf = confirm('Удалить задние №' + task.id);\n    if (conf) {\n      this.taskService.deleteTask(task).subscribe(\n        value => {\n          this.getTasks();\n        },\n        error => {\n        }\n      );\n    }\n  }\n\n  getTasks() {\n    this.taskService.getTask().subscribe(\n      (tasks: Task[]) => {\n        this.tasks = tasks;\n      },\n      error => {}\n    );\n  }\n\n  change(task: Task) {\n    this.taskService.changeTask(task).subscribe(\n      value => {\n        this.getTasks();\n      },\n      error => {}\n    );\n  }\n}\n","<div *ngIf=\"role === 'ROLE_TEACHER'\">\n  <form class=\"form\">\n    <p class=\"mat-card-title\">Создать задание:</p>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Логин ученика</mat-label>\n      <input matInput name=\"login\" id=\"login\" [(ngModel)]=\"newTask.studentLogin.login\" (change)=\"findLogin()\">\n    </mat-form-field>\n    <mat-list>\n      <mat-list-item (click)=\"insertLogin(user.login)\" *ngFor=\"let user of users\">{{user.login}}</mat-list-item>\n    </mat-list>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Текст задания</mat-label>\n      <textarea matInput name=\"text\" id=\"text\" [(ngModel)]=\"newTask.textOfTask\"></textarea>\n    </mat-form-field>\n    <button (click)=\"submit()\" mat-stroked-button>Создать</button>\n  </form>\n  <mat-accordion>\n    <mat-expansion-panel hideToggle *ngFor=\"let task of tasks\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Номер задания {{task.id}}\n        </mat-panel-title>\n        <mat-panel-description>\n          {{task.textOfTask}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>Текст задания: {{task.textOfTask}}</p>\n      <p>Кем выдано: {{task.teacherLogin.login}}</p>\n      <p>Кому выдано: {{task.studentLogin.login}}</p>\n      <p>Приято: {{task.taken}}</p>\n      <p>Ответ: {{task.answerOnTask}}</p>\n      <p>Отзыв: {{task.feedback}}</p>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Отзыв:</mat-label>\n        <textarea matInput [name]=\"task.id + 'd'\" [(ngModel)]=\"task.feedback\"></textarea>\n      </mat-form-field>\n      <button (click)=\"change(task)\" mat-stroked-button>Изменить отзыв</button>\n      <p><button (click)=\"deleteTask(task)\" mat-stroked-button color=\"warn\">Удалить задание</button></p>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n<div *ngIf=\"role === 'ROLE_STUDENT'\">\n  <mat-accordion>\n    <mat-expansion-panel hideToggle *ngFor=\"let task of tasks\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Номер задания {{task.id}}\n          <p *ngIf=\"!task.taken\"> (Задание не начато!)</p>\n        </mat-panel-title>\n        <mat-panel-description>\n          {{task.textOfTask}}\n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      <p>Текст задания: {{task.textOfTask}}</p>\n      <p>Кем выдано: {{task.teacherLogin.login}}</p>\n      <p>Кому выдано: {{task.studentLogin.login}}</p>\n      <p>Приято: {{task.taken}}</p>\n      <p>Ответ: {{task.answerOnTask}}</p>\n      <p>Отзыв: {{task.feedback}}</p>\n      <mat-slide-toggle [(ngModel)]=\"task.taken\">Принять</mat-slide-toggle>\n      <mat-form-field *ngIf=\"task.taken\" appearance=\"fill\">\n        <mat-label>Ответ:</mat-label>\n        <textarea matInput [name]=\"task.id + 'd'\" [(ngModel)]=\"task.answerOnTask\"></textarea>\n      </mat-form-field>\n      <button (click)=\"change(task)\" mat-stroked-button>Отправить</button>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n","export class User {\n  login: string;\n  password: string;\n  role: string;\n  firstName: string;\n  surname: string;\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {LoginReqest} from './login/login-reqest';\nimport {Observable} from 'rxjs';\nimport {RegisterRequest} from './register/register-request';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private httpClient: HttpClient) { }\n  url = 'https://afternoon-oasis-35400.herokuapp.com/';\n  public login(loginReqest: LoginReqest): Observable<any>{\n    return this.httpClient.post(this.url + 'authenticate', loginReqest);\n  }\n  public role(): Observable<any>{\n    return this.httpClient.get(this.url + 'role');\n  }\n  public register(registerRequest: RegisterRequest): Observable<any>{\n    return this.httpClient.post(this.url + 'register', registerRequest);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}